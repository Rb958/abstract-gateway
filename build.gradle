plugins {
	id 'java-library'
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'maven-publish'
	id 'signing'
}

group = 'io.github.rb958'
version = '0.0.4-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

java {
	withJavadocJar()
	withSourcesJar()
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = 'abstract-gateway'
			from components.java
			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
			pom {
				name = 'abstract-gateway'
				packaging = 'jar'
				description = 'abstract-gateway'
				url = 'https://github.com/Rb958/abstract-gateway'
				licenses {
					license {
						name = 'The Apache License, Version 2.0'
						url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}
				developers{
					developer{
						id = 'richie'
						name ='Richie AKAWA'
						email = 'richiebayless@gmail.com'
					}
				}
				scm {
					connection = 'scm:git:git://github.com/Rb958/abstract-gateway.git'
//					developerConnection = 'scm:git:ssh://example.com/my-library.git'
					url = 'https://github.com/Rb958/abstract-gateway'
				}
			}
		}
	}
	repositories {
		maven {
			// change URLs to point to your repos, e.g. http://my.org/repo
			def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"//layout.buildDirectory.dir('repos/releases')
			def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/" //layout.buildDirectory.dir('repos/snapshots')
			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
			credentials {
				username = "rb958"
				password = "Cm-uds-15sci0973"
			}
		}
	}
}

signing {
	sign publishing.publications.mavenJava
}


javadoc {
	if(JavaVersion.current().isJava9Compatible()) {
		options.addBooleanOption('html5', true)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	compileOnly 'org.projectlombok:lombok'
	implementation 'io.springfox:springfox-swagger2:3.0.0'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.9'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	testImplementation 'org.springframework.security:spring-security-test'
}

configurations {
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
